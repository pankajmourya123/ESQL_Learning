




CREATE COMPUTE MODULE flow3_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		CALL CopyEntireMessage();
		RETURN TRUE;
	END;



	CREATE PROCEDURE CopyEntireMessage() BEGIN
		/*SET OutputRoot.JSON.Data.CURRENT_DATE = CURRENT_DATE;
		SET OutputRoot.JSON.Data.CURRENT_DATE_YEAR = EXTRACT(YEAR FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_MONTH = EXTRACT(MONTH FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_DAY = EXTRACT(DAY FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_DAYOFYEAR = EXTRACT(DAYOFYEAR FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_DAYOFWEEK = EXTRACT(DAYOFWEEK FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_WEEKOFYEAR = EXTRACT(WEEKOFYEAR FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_WEEKOFMONTH = EXTRACT(WEEKOFMONTH FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_QUARTEROFYEAR = EXTRACT(QUARTEROFYEAR FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_ISLEAPYEAR = EXTRACT(ISLEAPYEAR FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_DAYS = EXTRACT(DAYS FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_MONTHS = EXTRACT(MONTHS FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_QUARTERS = EXTRACT(QUARTERS FROM CURRENT_DATE);
		SET OutputRoot.JSON.Data.CURRENT_DATE_WEEKS = EXTRACT(WEEKS FROM CURRENT_DATE);*/
		/* {
		"CURRENT_DATE": "2025-02-10",
		"CURRENT_DATE_YEAR": 2025,
		"CURRENT_DATE_MONTH": 2,
		"CURRENT_DATE_DAY": 10,
		"CURRENT_DATE_DAYOFYEAR": 41,
		"CURRENT_DATE_DAYOFWEEK": 2,
		"CURRENT_DATE_WEEKOFYEAR": 7,
		"CURRENT_DATE_WEEKOFMONTH": 3,
		"CURRENT_DATE_QUARTEROFYEAR": 1,
		"CURRENT_DATE_ISLEAPYEAR": false,
		"CURRENT_DATE_DAYS": 739292,
		"CURRENT_DATE_MONTHS": 24290,
		"CURRENT_DATE_QUARTERS": 8097,
		"CURRENT_DATE_WEEKS": 105614
		}*/
		-- Extract from CURRENT_TIME
		SET OutputRoot.JSON.Data.CURRENT_TIME = CURRENT_TIME;
		SET OutputRoot.JSON.Data.CURRENT_TIME_HOUR = EXTRACT(HOUR FROM CURRENT_TIME);
		SET OutputRoot.JSON.Data.CURRENT_TIME_MINUTE = EXTRACT(MINUTE FROM CURRENT_TIME);
		SET OutputRoot.JSON.Data.CURRENT_TIME_SECOND = EXTRACT(SECOND FROM CURRENT_TIME);					


/*{
    "CURRENT_TIME": "15:27:41.948044",
    "CURRENT_TIME_HOUR": 15,
    "CURRENT_TIME_MINUTE": 27,
    "CURRENT_TIME_SECOND": 4.1948044E+1
}*/


 -- Extract from CURRENT_TIMESTAMP
 
  /*  SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP = CURRENT_TIMESTAMP;
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_YEAR = EXTRACT(YEAR FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_MONTH = EXTRACT(MONTH FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_DAY = EXTRACT(DAY FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_HOUR = EXTRACT(HOUR FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_MINUTE = EXTRACT(MINUTE FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_SECOND = EXTRACT(SECOND FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_DAYOFYEAR = EXTRACT(DAYOFYEAR FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_DAYOFWEEK = EXTRACT(DAYOFWEEK FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_WEEKOFYEAR = EXTRACT(WEEKOFYEAR FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_WEEKOFMONTH = EXTRACT(WEEKOFMONTH FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_QUARTEROFYEAR = EXTRACT(QUARTEROFYEAR FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_ISLEAPYEAR = EXTRACT(ISLEAPYEAR FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_DAYS = EXTRACT(DAYS FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_MONTHS = EXTRACT(MONTHS FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_QUARTERS = EXTRACT(QUARTERS FROM CURRENT_TIMESTAMP);
    SET OutputRoot.JSON.Data.CURRENT_TIMESTAMP_WEEKS = EXTRACT(WEEKS FROM CURRENT_TIMESTAMP);*/
    /*{
    "CURRENT_TIME": "15:29:34.636891",
    "CURRENT_TIME_HOUR": 15,
    "CURRENT_TIME_MINUTE": 29,
    "CURRENT_TIME_SECOND": 3.4636891E+1,
    "CURRENT_TIMESTAMP": "2025-02-10 15:29:34.636891",
    "CURRENT_TIMESTAMP_YEAR": 2025,
    "CURRENT_TIMESTAMP_MONTH": 2,
    "CURRENT_TIMESTAMP_DAY": 10,
    "CURRENT_TIMESTAMP_HOUR": 15,
    "CURRENT_TIMESTAMP_MINUTE": 29,
    "CURRENT_TIMESTAMP_SECOND": 3.4636891E+1,
    "CURRENT_TIMESTAMP_DAYOFYEAR": 41,
    "CURRENT_TIMESTAMP_DAYOFWEEK": 2,
    "CURRENT_TIMESTAMP_WEEKOFYEAR": 7,
    "CURRENT_TIMESTAMP_WEEKOFMONTH": 3,
    "CURRENT_TIMESTAMP_QUARTEROFYEAR": 1,
    "CURRENT_TIMESTAMP_ISLEAPYEAR": false,
    "CURRENT_TIMESTAMP_DAYS": 739292,
    "CURRENT_TIMESTAMP_MONTHS": 24290,
    "CURRENT_TIMESTAMP_QUARTERS": 8097,
    "CURRENT_TIMESTAMP_WEEKS": 105614
}*/


-- Extract from GMT Date and Time (if supported)
   
    /*SET OutputRoot.JSON.Data.CURRENT_GMTDATE = CURRENT_GMTDATE;
    SET OutputRoot.JSON.Data.CURRENT_GMTTIME = CURRENT_GMTTIME;
    SET OutputRoot.JSON.Data.CURRENT_GMTTIMESTAMP = CURRENT_GMTTIMESTAMP;
    SET OutputRoot.JSON.Data.LOCAL_TIMEZONE = LOCAL_TIMEZONE;
    
    {
    "CURRENT_TIME": "15:33:13.025491",
    "CURRENT_TIME_HOUR": 15,
    "CURRENT_TIME_MINUTE": 33,
    "CURRENT_TIME_SECOND": 1.3025491E+1,
    "CURRENT_GMTDATE": "2025-02-10",
    "CURRENT_GMTTIME": "10:03:13.025491",
    "CURRENT_GMTTIMESTAMP": "2025-02-10 10:03:13.025491",
    "LOCAL_TIMEZONE": "INTERVAL '330' MINUTE"
}
*/

IST = UTC + 5:30 = GMT + 5:30


2. IBM IIB represents timezone offsets in minutes, so IST is shown as "INTERVAL 330 MINUTE"


3. LOCAL_TIMEZONE tells how much your system's time differs from UTC.
UTC (Coordinated Universal Time): The primary time standard by which the world regulates clocks and time; it does not change with the seasons.

GMT (Greenwich Mean Time): A time zone originally referring to mean solar time at the Royal Observatory in Greenwich, London; it is now largely replaced by UTC for timekeeping purposes.

IST (Indian Standard Time): The time zone observed throughout India and Sri Lanka, which is UTC+5:30, meaning it is 5 hours and 30 minutes ahead of UTC.
	END;
END MODULE;
